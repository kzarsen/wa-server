const express = require('express');
const { Client, LocalAuth } = require('whatsapp-web.js');
const qrcode = require('qrcode');
const path = require('path');

const app = express();
const port = process.env.PORT || 3000;

let qrCode = null;
let isReady = false;

// ะะฐัััะพะนะบะธ ัะฐะฑะปะพะฝะพะฒ ะธ JSON
app.set('view engine', 'ejs');
app.set('views', path.join(__dirname, 'views'));
app.use(express.static(path.join(__dirname, 'public')));
app.use(express.json());

// ะะฝะธัะธะฐะปะธะทะฐัะธั WhatsApp ะบะปะธะตะฝัะฐ
const client = new Client({
  authStrategy: new LocalAuth(),
  puppeteer: {
    headless: true,
    args: ['--no-sandbox'],
  },
});

client.on('qr', (qr) => {
  qrcode.toDataURL(qr, (err, url) => {
    qrCode = url;
    console.log('๐ฑ QR-ะบะพะด ะณะพัะพะฒ, ะฟะตัะตะนะดะธ ะฝะฐ /qr');
  });
});

client.on('ready', () => {
  isReady = true;
  console.log('โ WhatsApp ะฟะพะดะบะปัััะฝ ะธ ะณะพัะพะฒ ะบ ะพัะฟัะฐะฒะบะต');
});

client.on('auth_failure', (msg) => {
  console.error('โ ะัะธะฑะบะฐ ะฐะฒัะพัะธะทะฐัะธะธ:', msg);
});

client.initialize();

// ะะพัะฝะตะฒะฐั ัััะฐะฝะธัะฐ
app.get('/', (req, res) => {
  res.send('๐ ะกะตัะฒะตั ัะฐะฑะพัะฐะตั. ะะตัะตะนะดะธ ะฝะฐ /qr ะดะปั ะฐะฒัะพัะธะทะฐัะธะธ');
});

// ะกััะฐะฝะธัะฐ QR
app.get('/qr', (req, res) => {
  if (isReady) {
    res.send('โ WhatsApp ัะถะต ะฟะพะดะบะปัััะฝ');
  } else if (qrCode) {
    res.render('qr', { qrCode });
  } else {
    res.send('โณ QR ะตัั ะฝะต ัะณะตะฝะตัะธัะพะฒะฐะฝ, ะฟะพะดะพะถะดะธ ะธ ะพะฑะฝะพะฒะธ ัััะฐะฝะธัั');
  }
});

// ะะฑัะฐะฑะพัะบะฐ POST-ะทะฐะฟัะพัะพะฒ ะดะปั ะพัะฟัะฐะฒะบะธ ัะพะพะฑัะตะฝะธะน
app.post('/send', async (req, res) => {
  const body = req.body?.body || req.body;
  const raw = body.destination || body.phone || "";
  const text = body.message || body.text || "ะกะพะพะฑัะตะฝะธะต ะฟะพ ัะผะพะปัะฐะฝะธั";

  let digits = raw.replace(/\D/g, '');

  if (digits.length === 10) {
    digits = '7' + digits;
  } else if (digits.length === 11 && digits.startsWith('8')) {
    digits = '7' + digits.slice(1);
  }

  // ๐ ะคะธะฝะฐะปัะฝะฐั ะฟัะพะฒะตัะบะฐ
  const validPhone = digits.length === 11 && digits.startsWith('7');
  if (!validPhone) {
    console.log('โ ะะตะฒะตัะฝัะน ะฝะพะผะตั:', raw);
    return res.status(400).json({ error: 'ะะตะฒะตัะฝัะน ะฝะพะผะตั ัะตะปะตัะพะฝะฐ', original: raw });
  }

  if (!isReady) {
    return res.status(503).json({ error: 'WhatsApp ะตัั ะฝะต ะฟะพะดะบะปัััะฝ' });
  }

  const chatId = `${digits}@c.us`;

  try {
    const result = await client.sendMessage(chatId, text);
    console.log(`โ ะัะฟัะฐะฒะปะตะฝะพ ${digits}: ${text}`);
    res.json({ success: true });
  } catch (error) {
    console.error('โ ะัะธะฑะบะฐ ะพัะฟัะฐะฒะบะธ:', error.message);
    res.status(500).json({ error: 'ะัะธะฑะบะฐ ะพัะฟัะฐะฒะบะธ ัะพะพะฑัะตะฝะธั', details: error.message });
  }
});

// ะะฐะฟััะบ ัะตัะฒะตัะฐ
app.listen(port, () => {
  console.log(`๐ ะกะตัะฒะตั ะทะฐะฟััะตะฝ: http://localhost:${port}`);
});
