const express = require('express');
const { Client, LocalAuth } = require('whatsapp-web.js');
const qrcode = require('qrcode');
const path = require('path');

const app = express();
const port = process.env.PORT || 3000;

let qrCode = null;
let isReady = false;

app.set('view engine', 'ejs');
app.set('views', path.join(__dirname, 'views'));
app.use(express.static(path.join(__dirname, 'public')));

const client = new Client({
  authStrategy: new LocalAuth(),
  puppeteer: {
    headless: true,
    args: ['--no-sandbox'],
  },
});

client.on('qr', (qr) => {
  qrcode.toDataURL(qr, (err, url) => {
    qrCode = url;
  });
});

client.on('ready', () => {
  isReady = true;
  console.log('‚úÖ WhatsApp –ø–æ–¥–∫–ª—é—á—ë–Ω');
});

client.initialize();

app.get('/', (req, res) => {
  res.send('üöÄ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ /qr');
});

app.get('/qr', (req, res) => {
  if (isReady) {
    res.send('‚úÖ WhatsApp —É–∂–µ –ø–æ–¥–∫–ª—é—á—ë–Ω');
  } else if (qrCode) {
    res.render('qr', { qrCode });
  } else {
    res.send('‚è≥ QR –µ—â—ë –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω, –æ–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É —á–µ—Ä–µ–∑ 5 —Å–µ–∫...');
  }
});

app.listen(port, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω: http://localhost:${port}`);
});
